plugins {
    id 'java-library'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

group 'ch.unibas.dmi.dbis'
version '0.0.1-ALPHA'

application {
    mainClass = 'ch.unibas.dmi.dbis.cs108.example.HelloWorld'
}

javadoc {
    source = sourceSets.main.allJava
    setDestinationDir(layout.buildDirectory.dir("docs/Documentation/javadoc").get().asFile)
    options.encoding = "UTF-8"
}

javafx {
    version = "19.0.2.1"
    modules = ['javafx.controls', 'javafx.fxml']
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // JavaFX dependencies (explicit if needed)
    implementation 'org.openjfx:javafx-controls:19.0.2.1'
    implementation 'org.openjfx:javafx-fxml:19.0.2.1'

    // JUnit dependencies
    testImplementation platform('org.junit:junit-bom:5.9.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // Ensures tests can run in some cases
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes 'Main-Class': application.mainClass
    }
    from {
        configurations.runtimeClasspath.collect { file ->
            file.isDirectory() ? file : zipTree(file)
        }
    }
}